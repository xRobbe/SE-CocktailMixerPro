
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.cpp" 0
//@(#) Dosierer.cpp


                    
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.h" 0
//@(#) Dosierer.h

                    
                    


                    
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Observer.h" 0
//@(#) Observer.h

                    
                    

//
class Observer
{
	
public:
	//
	virtual void update() = 0;
	
};

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.h" 10
                 
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Waage.h" 0
//@(#) Waage.h

                 
                 

                   
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Subject.h" 0
//@(#) Subject.h

                   
                   

                    
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Observer.h" 0
//@(#) Observer.h

                    
                    

  
              
 
	
       
	  
	                          
	
  

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Subject.h" 9
                
//
class Subject
{
	
public:
	//
	void attach(Observer * observer);
	//
	void detach(Observer * observer);
	//
	void notify();
	
private:
	//
	std::vector<Observer *> observers;
	
	

};

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Waage.h" 9
//Wiegt den Inhalt der Mischsch√ºssel
class Waage: public Subject
{
	
public:
	//
	long int getDeltaGewich();
	//
	long int getGewicht();
	//
	void setGewicht(long int gewicht);
	//
	Waage();
	
private:
	//
	long int iGewicht;
	
	//
	long int iGewichtDelta;
	
	
};

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.h" 11
                  
                
                      
#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Zutatentyp.h" 0
//@(#) Zutatentyp.h

                      
                      

                
//
class Zutatentyp
{
	
public:
	//
	int getMenge();
	//
	int getTyp();
	//
	int getZeit();
	//
	Zutatentyp(int typ);
	
private:
	//
	int zeit;
	
	//
	int menge;
	
	//
	int typ;
	
	
};

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.h" 14
//Dosiert die Menge einer Zutat
class Dosierer: public Observer
{
	
public:
	//
	Dosierer(std::string sZutat);
	//
	std::string getInhalt();
	//
	Zutatentyp * getTyp();
	

	//
	void update();
	private:
	//
	std::string sInhalt;
	
	//
	Zutatentyp * typ;
	
	

	//
	Waage * waage;
	
};

      

#__FILE__ _"/home/ldapusers/isttoschu/NetBeansProjects/SE-CocktailMixerPro/Dosierer.cpp" 4
//

//
std::string Dosierer::getInhalt() {
    return sInhalt;
}

//

//
Dosierer::Dosierer(std::string sZutat) {
    sInhalt = sZutat;
    if (sZutat == "Eis") {
        typ = new Zutatentyp(0);
        return;
    }
    if (sZutat == "Limettenstuecke") {
        typ = new Zutatentyp(1);
        return;
    }
    typ = new Zutatentyp(2);
}

//

//
Zutatentyp * Dosierer::getTyp() {
    return typ;
}

//
void Dosierer::update()
{
	
}
